Index: src/main/java/org/go_game/go_game_1_0/Board/Board.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.go_game.go_game_1_0.Board;\r\n\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class Board {\r\n    private int size;\r\n    private Stone[][] grid;\r\n    private List<Stone> blockedStonesWhite;\r\n    private List<Stone> blockedStonesBlack;\r\n    private StoneColor move;\r\n\r\n    public Board(int size){\r\n        this.size = size;\r\n        this.grid = new Stone[size][size];\r\n        blockedStonesBlack = new ArrayList<>();\r\n        blockedStonesWhite = new ArrayList<>();\r\n        move = StoneColor.BLACK;\r\n    }\r\n    public boolean placeStone(int row, int col, Stone stone) {\r\n        if (isValidMoveorKillMove(row, col, stone) && grid[row][col] == null) {\r\n            List<Stone> blockedStones = (stone.getStoneColor() == StoneColor.WHITE) ? blockedStonesWhite : blockedStonesBlack;\r\n            for(Stone stone1 :blockedStonesBlack){\r\n                System.out.println(stone1.getRow()+ \" \"+ stone1.getCol());\r\n            }\r\n            if (!isContain(row,col,stone.getStoneColor())) {\r\n                System.out.println(\"XD\");\r\n                blockedStones.clear();\r\n                blockedStones.add(stone);\r\n                grid[row][col] = stone;\r\n                return true;\r\n            }\r\n            else{\r\n                System.out.println(\"Nieprawidłowy ruch na zajeta pozycji (\" + row + \", \" + col + \")\");\r\n                blockedStones.clear();\r\n            }\r\n        } else {\r\n            System.out.println(\"Nieprawidłowy ruch na pozycji (\" + row + \", \" + col + \")\");\r\n        }\r\n        if(move == StoneColor.BLACK){\r\n            move = StoneColor.WHITE;\r\n        }else{\r\n            move = StoneColor.BLACK;\r\n        }\r\n        return false;\r\n    }\r\n    private boolean isContain(int row,int col, StoneColor stoneColor){\r\n        List<Stone> blockedStones = (stoneColor == StoneColor.WHITE) ? blockedStonesWhite : blockedStonesBlack;\r\n        if(blockedStones.isEmpty()){\r\n            return false;\r\n        }\r\n        for(Stone stone : blockedStones){\r\n            if(stone.getRow()==row && stone.getCol()==col){\r\n                return true;\r\n            }\r\n        }\r\n    }\r\n    public Stone getStone(int row, int col){\r\n        if(isValidMove(row,col)){\r\n            return grid[row][col];\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    public void removeStone(int row, int col){\r\n        if(isValidMove(row,col)){\r\n            grid[row][col] = null;\r\n        } else {\r\n            System.out.println(\"Nieprawidłowa próba usunięcia kamienia z pozycji (\" + row + \", \" + col + \")\");\r\n        }\r\n    }\r\n    public boolean isValidMove(int row, int col) {\r\n        return row >= 0 && row <= size - 1 && col >= 0 && col <= size - 1 ;\r\n    }\r\n    public boolean isValidMoveorKillMove(int row, int col, Stone stone) {\r\n        int[][] directions = {{-1, 0}, {1, 0}, {0, -1}, {0, 1}};\r\n\r\n        for (int[] dir : directions) {\r\n            int newRow = row + dir[0];\r\n            int newCol = col + dir[1];\r\n\r\n            if (isValidMove(newRow, newCol) && isKillMove(newRow, newCol, stone.getStoneColor())) {\r\n                if (grid[newRow][newCol].getStoneColor() != stone.getStoneColor()) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        return isValidMove(row, col);\r\n    }\r\n    public boolean isKillMove(int row, int col, StoneColor stoneColor) {\r\n        return grid[row][col] != null && grid[row][col].getStoneColor() != stoneColor\r\n                && grid[row][col].getStoneGroup().getBreaths() == 1;\r\n    }\r\n    public void placeStoneAndUpdateGroups(int row,int col, Stone stone){\r\n        if(placeStone(row,col,stone)) {\r\n\r\n            StoneGroup newStoneGroup = new StoneGroup(size);\r\n\r\n            addStoneToGroup(row, col, newStoneGroup);\r\n            updateGroups(row, col, newStoneGroup);\r\n            updateAllGroupsBreaths();\r\n        }\r\n    }\r\n    private void updateGroups(int row, int col, StoneGroup newStoneGroup){\r\n        List<StoneGroup> neighboringGroups = getNeighbringGroups(row,col);\r\n\r\n        for(StoneGroup stoneGroup : neighboringGroups){\r\n            if(newStoneGroup.getStones() != null ) {\r\n                if (newStoneGroup.getStones().getFirst().getStoneColor() == stoneGroup.getStones().getFirst().getStoneColor()) {\r\n                    newStoneGroup.merge(stoneGroup);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private List<StoneGroup> getNeighbringGroups(int row, int col){\r\n        List<StoneGroup> neighboringGroups = new ArrayList<>();\r\n\r\n        checkAndAddNeighbor(neighboringGroups, row - 1, col);\r\n        checkAndAddNeighbor(neighboringGroups, row + 1, col);\r\n        checkAndAddNeighbor(neighboringGroups, row, col - 1);\r\n        checkAndAddNeighbor(neighboringGroups, row, col + 1);\r\n\r\n        return neighboringGroups;\r\n    }\r\n    public void checkAndAddNeighbor(List<StoneGroup> neighboringGroups, int row, int col){\r\n        if (isValidMove(row, col)) {\r\n            Stone neighborStone = getStone(row, col);\r\n            if (neighborStone != null) {\r\n                StoneGroup neighborGroup = neighborStone.getStoneGroup();\r\n                if (!neighboringGroups.contains(neighborGroup)) {\r\n                    neighboringGroups.add(neighborGroup);\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private void addStoneToGroup(int row,int col,StoneGroup stoneGroup){\r\n        Stone stone = getStone(row,col);\r\n        if(stone != null){\r\n            stoneGroup.addStone(stone);\r\n        }\r\n    }\r\n    private void addStoneToGroupAndUpdateBreaths(int row, int col, StoneGroup stoneGroup){\r\n        Stone stone = getStone(row,col);\r\n        if(stone != null){\r\n            stoneGroup.addStone(stone);\r\n            updateAllGroupsBreaths();\r\n        }\r\n    }\r\n    private void updateAllGroupsBreaths(){\r\n        List<StoneGroup> stoneGroups = new ArrayList<>();\r\n        for(int i=0;i<size;i++){\r\n            for(int j=0;j<size;j++){\r\n                if(grid[i][j]!= null && grid[i][j].getStoneGroup()!=null){\r\n                    stoneGroups.add(grid[i][j].getStoneGroup());\r\n                }\r\n            }\r\n        }\r\n        for(StoneGroup stoneGroup : stoneGroups){\r\n            if(stoneGroup.getStones().getFirst().getStoneColor()!=move) {\r\n                updateBreathsForGroup(stoneGroup);\r\n            }\r\n        }\r\n        for(StoneGroup stoneGroup : stoneGroups){\r\n            if(stoneGroup.getStones().getFirst().getStoneColor()==move) {\r\n                updateBreathsForGroup(stoneGroup);\r\n            }\r\n        }\r\n\r\n    }\r\n    private void updateBreathsForGroup(StoneGroup stoneGroup){\r\n        stoneGroup.setBreaths(0);\r\n\r\n        for(Stone stone : stoneGroup.getStones()) {\r\n            updateBreaths(stoneGroup,stone.getRow(), stone.getCol());\r\n        }\r\n        if(stoneGroup.getBreaths()==0){\r\n            for(Stone stone : stoneGroup.getStones()){\r\n                if(stone.getStoneGroup().getStones().size()==1) {\r\n                    if (stone.getStoneColor() == StoneColor.WHITE) {\r\n                        blockedStonesWhite = stoneGroup.getStones();\r\n                    } else {\r\n                        blockedStonesBlack = stoneGroup.getStones();\r\n                    }\r\n                }\r\n                removeStone(stone.getRow(), stone.getCol());\r\n            }\r\n        }\r\n    }\r\n    private void updateBreaths(StoneGroup stoneGroup, int row,int col){\r\n        checkAndAddBreath(stoneGroup, row - 1, col);\r\n        checkAndAddBreath(stoneGroup, row + 1, col);\r\n        checkAndAddBreath(stoneGroup, row, col - 1);\r\n        checkAndAddBreath(stoneGroup, row, col + 1);\r\n    }\r\n    private void checkAndAddBreath(StoneGroup stoneGroup,int row, int col){\r\n        if(isValidMove(row,col)){\r\n            Stone neighborStone = getStone(row,col);\r\n            if(neighborStone == null){\r\n                stoneGroup.addBreath(row,col);\r\n            }\r\n        }\r\n    }\r\n    public String getBoardToString(){\r\n        String board = \"\";\r\n        for(int i=0;i<size;i++){\r\n            for (int j=0;j<size;j++){\r\n                if(grid[i][j]!=null){\r\n                    if(grid[i][j].getStoneColor()==StoneColor.WHITE){\r\n                        board+=\";W\";\r\n                    }else{\r\n                        board+=\";B\";\r\n                    }\r\n                }else{\r\n                    board+=\";N\";\r\n                }\r\n            }\r\n        }\r\n        return board;\r\n    }\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/org/go_game/go_game_1_0/Board/Board.java b/src/main/java/org/go_game/go_game_1_0/Board/Board.java
--- a/src/main/java/org/go_game/go_game_1_0/Board/Board.java	
+++ b/src/main/java/org/go_game/go_game_1_0/Board/Board.java	
@@ -20,7 +20,7 @@
     public boolean placeStone(int row, int col, Stone stone) {
         if (isValidMoveorKillMove(row, col, stone) && grid[row][col] == null) {
             List<Stone> blockedStones = (stone.getStoneColor() == StoneColor.WHITE) ? blockedStonesWhite : blockedStonesBlack;
-            for(Stone stone1 :blockedStonesBlack){
+            for(Stone stone1 :blockedStones){
                 System.out.println(stone1.getRow()+ " "+ stone1.getCol());
             }
             if (!isContain(row,col,stone.getStoneColor())) {
@@ -54,6 +54,7 @@
                 return true;
             }
         }
+        return false;
     }
     public Stone getStone(int row, int col){
         if(isValidMove(row,col)){
@@ -219,4 +220,4 @@
         }
         return board;
     }
-}
+}
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"febe2da9-2102-4118-b62a-e91ba076074b\" name=\"Changes\" comment=\"poprawa package Board i dodanie nowej package Board z alternatywna poprawiona implementacja\">\r\n      <change afterPath=\"$PROJECT_DIR$/src/main/java/org/go_game/go_game_1_0/Board/BoardAppTestXD.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/go_game/go_game_1_0/Board/Board.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/go_game/go_game_1_0/Board/Board.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/go_game/go_game_1_0/Board/Stone.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/go_game/go_game_1_0/Board/Stone.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/go_game/go_game_1_0/Board/StoneGroup.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/go_game/go_game_1_0/Board/StoneGroup.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/go_game/go_game_1_0/Board/StoneType.java\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/go_game/go_game_1_0/Board_2/Board.java\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/go_game/go_game_1_0/Board_2/BoardAppTestXD.java\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/go_game/go_game_1_0/Board_2/Stone.java\" beforeDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/go_game/go_game_1_0/Board_2/StoneColor.java\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/src/main/java/org/go_game/go_game_1_0/Board/StoneColor.java\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/src/main/java/org/go_game/go_game_1_0/Board_2/StoneGroup.java\" beforeDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Enum\" />\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\r\n      <map>\r\n        <entry key=\"$PROJECT_DIR$\" value=\"master\" />\r\n      </map>\r\n    </option>\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MavenImportPreferences\">\r\n    <option name=\"generalSettings\">\r\n      <MavenGeneralSettings>\r\n        <option name=\"mavenHome\" value=\"Use Maven wrapper\" />\r\n      </MavenGeneralSettings>\r\n    </option>\r\n  </component>\r\n  <component name=\"ProblemsViewState\">\r\n    <option name=\"selectedTabId\" value=\"CurrentFile\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 1\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2auGtjGild6HPmhOujbbYhfGjzP\" />\r\n  <component name=\"ProjectLevelVcsManager\" settingsEditedManually=\"true\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Application.BoardAppTestXD.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.Client.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.HelloApplication.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.Server.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RunManager\">\r\n    <configuration default=\"true\" type=\"JetRunConfigurationType\">\r\n      <module name=\"Go_game_1.0\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n    <configuration default=\"true\" type=\"KotlinStandaloneScriptRunConfigurationType\">\r\n      <module name=\"Go_game_1.0\" />\r\n      <option name=\"filePath\" />\r\n      <method v=\"2\">\r\n        <option name=\"Make\" enabled=\"true\" />\r\n      </method>\r\n    </configuration>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"jdk-21.0.1-openjdk-21.0.1-f644763e9732-f98dd351\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"febe2da9-2102-4118-b62a-e91ba076074b\" name=\"Changes\" comment=\"\" />\r\n      <created>1705161266824</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1705161266824</updated>\r\n      <workItem from=\"1705161267823\" duration=\"84000\" />\r\n      <workItem from=\"1705164243804\" duration=\"13829000\" />\r\n      <workItem from=\"1705251746771\" duration=\"11000\" />\r\n      <workItem from=\"1705699257517\" duration=\"6262000\" />\r\n      <workItem from=\"1705756714363\" duration=\"3000\" />\r\n      <workItem from=\"1705941923000\" duration=\"12187000\" />\r\n    </task>\r\n\r\n    <task id=\"LOCAL-00001\" summary=\"poprawa package Board i dodanie nowej package Board z alternatywna poprawiona implementacja\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1705711696679</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1705711696679</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"2\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State>\r\n              <option name=\"FILTERS\">\r\n                <map>\r\n                  <entry key=\"branch\">\r\n                    <value>\r\n                      <list>\r\n                        <option value=\"Paweł\" />\r\n                      </list>\r\n                    </value>\r\n                  </entry>\r\n                </map>\r\n              </option>\r\n            </State>\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"poprawa package Board i dodanie nowej package Board z alternatywna poprawiona implementacja\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"poprawa package Board i dodanie nowej package Board z alternatywna poprawiona implementacja\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -5,17 +5,8 @@
   </component>
   <component name="ChangeListManager">
     <list default="true" id="febe2da9-2102-4118-b62a-e91ba076074b" name="Changes" comment="poprawa package Board i dodanie nowej package Board z alternatywna poprawiona implementacja">
-      <change afterPath="$PROJECT_DIR$/src/main/java/org/go_game/go_game_1_0/Board/BoardAppTestXD.java" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/src/main/java/org/go_game/go_game_1_0/Board/Board.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/go_game/go_game_1_0/Board/Board.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/go_game/go_game_1_0/Board/Stone.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/go_game/go_game_1_0/Board/Stone.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/go_game/go_game_1_0/Board/StoneGroup.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/go_game/go_game_1_0/Board/StoneGroup.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/go_game/go_game_1_0/Board/StoneType.java" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/go_game/go_game_1_0/Board_2/Board.java" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/go_game/go_game_1_0/Board_2/BoardAppTestXD.java" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/go_game/go_game_1_0/Board_2/Stone.java" beforeDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/go_game/go_game_1_0/Board_2/StoneColor.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/org/go_game/go_game_1_0/Board/StoneColor.java" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/src/main/java/org/go_game/go_game_1_0/Board_2/StoneGroup.java" beforeDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -112,7 +103,6 @@
       <workItem from="1705756714363" duration="3000" />
       <workItem from="1705941923000" duration="12187000" />
     </task>
-
     <task id="LOCAL-00001" summary="poprawa package Board i dodanie nowej package Board z alternatywna poprawiona implementacja">
       <option name="closed" value="true" />
       <created>1705711696679</created>
